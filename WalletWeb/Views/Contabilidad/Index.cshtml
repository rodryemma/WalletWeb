@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Transacciones</h2>

<p>Total en USD: <span id="totalMonto">0.00</span></p>

<div>
    <label for="tipoMovimientoSelect" class="form-label me-2">Filtrar por movimiento:</label>
    <select id="tipoMovimientoSelect" class="form-select w-auto d-inline-block ms-2">
        <option value="total">Total</option>
        <option value="gastos">Gastos</option>
        <option value="ingresos">Ingresos</option>
    </select>
</div>

<div>
    <label>Fecha desde:</label>
    <input type="date" id="fechaDesde">
    <label>Fecha hasta:</label>
    <input type="date" id="fechaHasta">
</div>


<div>
    <table id="tablaTransacciones" class="display">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Categoría</th>
                <th>Cuenta</th>
                <th>Monto Usd</th>
                <th>Comentario</th>
                <th>Tipo Movimiento</th>
                <th>Acción</th>
            </tr>
        </thead>
    </table>
</div>


<!-- Modal de Eliminación -->
<div class="modal fade" id="modalConfirmarEliminar" tabindex="-1" aria-labelledby="tituloModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="tituloModal">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que querés eliminar este registro?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmarEliminar">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de modificación -->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="tituloEditar" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="tituloEditar">Editar transacción</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body p-3">              
                <form id="formEditar">
                    <input type="hidden" id="editarId" />

                    <div class="row">
                        <div class="col-md-6 mb-2">
                            <label for="editarFecha" class="form-label">Fecha</label>
                            <input type="date" class="form-control" id="editarFecha" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarCategoria" class="form-label">Categoría</label>
                            <input type="text" class="form-control" id="editarCategoria" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarCuenta" class="form-label">Cuenta</label>
                            <input type="text" class="form-control" id="editarCuenta" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarCantidadDivisa" class="form-label">Cantidad Divisa</label>
                            <input type="number" step="any" class="form-control" id="editarCantidadDivisa" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarDivisa" class="form-label">Divisa</label>
                            <input type="text" class="form-control" id="editarDivisa" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarComentario" class="form-label">Comentario</label>
                            <input type="text" class="form-control" id="editarComentario" required />
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="editarValorCCL" class="form-label">Valor CCL</label>
                            <input type="number" step="any" class="form-control" id="editarValorCCL" required />
                        </div>

                        @* <div class="col-md-6 mb-2">
                            <label for="editarMontoUsd" class="form-label">Monto USD</label>
                            <input type="number" step="any" class="form-control" id="editarMontoUsd" required />
                        </div> *@

                        <div class="col-md-6 mb-2">
                            <label for="editarTipoMovimiento" class="form-label">Tipo Movimiento</label>
                            <select class="form-control" id="editarTipoMovimiento">
                                <option value="ingresos">Ingresos</option>
                                <option value="gastos">Gastos</option>
                            </select>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-primary" id="btnGuardarCambios">Guardar</button>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.min.css">
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.min.js"></script>

    <script>
        $(document).ready(function () {
            $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            let fechaDesde = $('#fechaDesde').val();
            let fechaHasta = $('#fechaHasta').val();
            let fechaColumna = data[0];

            if (!fechaColumna) return false;

            // Convertir a formato compatible (si es necesario)
            let fecha = new Date(fechaColumna.split('/').reverse().join('-'));
            let desde = fechaDesde ? new Date(fechaDesde) : null;
            let hasta = fechaHasta ? new Date(fechaHasta) : null;

            return (!desde || fecha >= desde) && (!hasta || fecha <= hasta);
            });

            $('#fechaDesde, #fechaHasta').on('change', function () {
                $('#tablaTransacciones').DataTable().draw();
            });

            var tabla = $('#tablaTransacciones').DataTable({
                responsive: true,
                paging: true,
                destroy: true,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                },
                ajax: {
                    url: '/transacciones/json',
                    data: function (d) {
                         d.tipoMovimiento = $('#tipoMovimientoSelect').val();
                    }
                },
                order: [[0, 'desc']],//Fecha de forma descendente
                columns: [
                    {
                        data: 'fecha',
                        title: 'Fecha',
                        render: function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                const date = new Date(data);
                                return date.toLocaleDateString();
                            }
                            return data;
                        }
                    },
                    { data: 'categoria' },
                    { data: 'cuenta' },
                    {
                        data: 'montoUsd' ,
                        render: $.fn.dataTable.render.number(',', '.', 2, '$')
                    },
                    { data: 'comentario' },
                    { data: 'tipoMovimiento' },
                    {
                      data: null,
                      orderable: false,
                      searchable: false,
                      render: function (data, type, row) {
                          return `
                              <button class="btn-editar btn btn-sm btn-primary" data-id="${row.id}">Editar</button>
                              <button class="btn-eliminar btn btn-sm btn-danger" data-id="${row.id}">
                                      Eliminar
                                      <i class="bi bi-trash-fill"></i>
                              </button>
                          `;
                      }
                    }
                    ],
                    footerCallback: function (row, data, start, end, display) {
                        var api = this.api();
                        var total = api
                            .column(3, { filter: 'applied' })//Hacemos que se aplique el filtro en la celda 3 montoUsd
                            .data()
                            .reduce(function (a, b) {
                                var x = typeof a === 'string' ? parseFloat(a.replace(/[\$,]/g, '')) : a;
                                var y = typeof b === 'string' ? parseFloat(b.replace(/[\$,]/g, '')) : b;
                                return (x || 0) + (y || 0);
                            }, 0);

                     // Mostrar el total
                     $('#totalMonto').text(total.toFixed(2));
                    }
            });

            $('#tipoMovimientoSelect').change(function () {
            tabla.ajax.reload();
            });
        });


        let idAEliminar = null;

        // $('#tablaTransacciones').on('click', '.btn-eliminar', function () {
        //     // var id = $(this).data('id');
        //     idAEliminar = $(this).data('id');
        //     const modal = new bootstrap.Modal(document.getElementById('modalConfirmarEliminar'));
        //     modal.show();
        // });

        document.querySelector('#tablaTransacciones').addEventListener('click', function (e) {
            if (e.target.classList.contains('btn-eliminar')) {
                idAEliminar = e.target.dataset.id;
                document.getElementById('modalConfirmarEliminar').dataset.id = idAEliminar;

                const modal = new bootstrap.Modal(document.getElementById('modalConfirmarEliminar'));
                modal.show();
            }
        });


        // $('#btnConfirmarEliminar').on('click', function () {
        //     // TODO deshabilitar el boton o buscar la manera de no enviar varias peticiones
        //     if (idAEliminar !== null) {
        //         //console.log('Eliminar ID:', idAEliminar);
        //         const data = { id : idAEliminar };
        //         $.ajax({
        //             url: `/transacciones/eliminar`,
        //             method: 'POST',
        //             contentType: 'application/json',
        //             data: JSON.stringify(data),
        //             success: function () {
        //                 $('#tablaTransacciones').DataTable().ajax.reload();
        //                 idAEliminar = null;
        //                 const modal = bootstrap.Modal.getInstance(document.getElementById('modalConfirmarEliminar'));
        //                 modal.hide();
        //                 // TODO Opcional: mostrar un toast o mensaje de éxito
        //             },
        //             error: function () {
        //                 alert("Error al eliminar el registro.");
        //             }
        //         });
        //     }
        // });

        document.addEventListener('DOMContentLoaded', function () {
            const btnEliminar = document.getElementById('btnConfirmarEliminar');

            btnEliminar.addEventListener('click', function () {
                if (typeof idAEliminar !== 'undefined' && idAEliminar !== null) {
                    btnEliminar.disabled = true;

                    const data = { id: idAEliminar };

                    fetch('/transacciones/eliminar', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                    .then(response => {
                        if (!response.ok) throw new Error('Error al eliminar');
                        return response.text();
                    })
                    .then(() => {
                        if (window.$ && $.fn.DataTable) {
                            $('#tablaTransacciones').DataTable().ajax.reload();
                        }

                        idAEliminar = null;

                        const modal = bootstrap.Modal.getInstance(document.getElementById('modalConfirmarEliminar'));
                        if (modal) modal.hide();
                                                
                        mostrarToast('Registro eliminado correctamente', 'success');
                    })
                    .catch(error => {
                        console.error('Error al eliminar:', error);
                        //mostrarToast('Error al eliminar el registro', 'danger');
                        mostrarToast(error.message, 'danger');

                    })
                    .finally(() => {
                        btnEliminar.disabled = false;
                    });
                }
            });
        });

        // $('#tablaTransacciones').on('click', '.btn-editar', function () {
        //     const id = $(this).data('id');

        //     const row = $('#tablaTransacciones').DataTable().row($(this).parents('tr')).data();

        //     const fechaFormateada = row.fecha.toString().split('T')[0];
        //     // TODO console.log("Valor crudo de Fecha:", row.id);
        //     // Llenamos los campos del modal con los datos
        //     $('#editarId').val(row.id);
        //     $('#editarFecha').val(fechaFormateada);
        //     $('#editarCategoria').val(row.categoria);
        //     $('#editarCuenta').val(row.cuenta);
        //     $('#editarCantidadDivisa').val(row.cantidadDivisa);
        //     $('#editarDivisa').val(row.divisa);
        //     $('#editarComentario').val(row.comentario);
        //     $('#editarTipoMovimiento').val(row.tipoMovimiento);
        //     $('#editarValorCCL').val(row.valorCCL);
        //     $('#editarMontoUsd').val(row.montoUsd);

        //     const modal = new bootstrap.Modal(document.getElementById('modalEditar'));
        //     modal.show();
        // });

        document.addEventListener('DOMContentLoaded', function () {
            const tabla = document.getElementById('tablaTransacciones');

            tabla.addEventListener('click', function (event) {
                const target = event.target;

                if (target.classList.contains('btn-editar')) {
                    const id = target.getAttribute('data-id');

                    // Encontramos la fila asociada
                    const tr = target.closest('tr');

                    // Usamos DataTables para obtener la data
                    const row = $('#tablaTransacciones').DataTable().row(tr).data();

                    if (!row) {
                        console.error('No se encontró la fila en DataTable');
                        return;
                    }

                    const fechaFormateada = row.fecha?.toString().split('T')[0];

                    // Llenar los campos del modal
                    document.getElementById('editarId').value = row.id;
                    document.getElementById('editarFecha').value = fechaFormateada;
                    document.getElementById('editarCategoria').value = row.categoria;
                    document.getElementById('editarCuenta').value = row.cuenta;
                    document.getElementById('editarCantidadDivisa').value = row.cantidadDivisa;
                    document.getElementById('editarDivisa').value = row.divisa;
                    document.getElementById('editarComentario').value = row.comentario;
                    document.getElementById('editarTipoMovimiento').value = row.tipoMovimiento;
                    document.getElementById('editarValorCCL').value = row.valorCCL;
                    //document.getElementById('editarMontoUsd').value = row.montoUsd;

                    // Mostrar el modal
                    const modalEditar = new bootstrap.Modal(document.getElementById('modalEditar'));
                    modalEditar.show();
                }
            });
        });

        // $('#btnGuardarCambios').on('click', function () {
        //     // TODO deshabilitar el boton o buscar la manera de no enviar varias peticiones
        //     const data = {
        //         Id: $('#editarId').val(),
        //         Fecha: $('#editarFecha').val(),
        //         Categoria: $('#editarCategoria').val(),
        //         Cuenta: $('#editarCuenta').val(),
        //         CantidadDivisa: $('#editarCantidadDivisa').val(),
        //         Divisa: $('#editarDivisa').val(),
        //         Comentario: $('#editarComentario').val(),
        //         TipoMovimiento: $('#editarTipoMovimiento').val(),
        //         ValorCCL: $('#editarValorCCL').val(),
        //         MontoUsd: parseFloat($('#editarMontoUsd').val())
        //     };

        //     $.ajax({
        //         url: '/transacciones/editar',
        //         method: 'POST',
        //         contentType: 'application/json',
        //         data: JSON.stringify(data),
        //         success: function () {
        //             $('#tablaTransacciones').DataTable().ajax.reload();
        //             const modal = bootstrap.Modal.getInstance(document.getElementById('modalEditar'));
        //             modal.hide();
        //         },
        //         error: function () {
        //             alert('Error al guardar los cambios.');
        //         }
        //     });
        // });

        document.addEventListener('DOMContentLoaded', function () {
            const btnGuardar = document.getElementById('btnGuardarCambios');
            const form = document.getElementById("formEditar");

            //Validar formulario "formEditar"
            btnGuardar.addEventListener('click', function () {

                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }

                // Desactivar el botón para evitar múltiples envíos
                btnGuardar.disabled = true;

                const data = {
                    Id: document.getElementById('editarId').value,
                    Fecha: document.getElementById('editarFecha').value,
                    Categoria: document.getElementById('editarCategoria').value,
                    Cuenta: document.getElementById('editarCuenta').value,
                    CantidadDivisa: document.getElementById('editarCantidadDivisa').value,
                    Divisa: document.getElementById('editarDivisa').value,
                    Comentario: document.getElementById('editarComentario').value,
                    TipoMovimiento: document.getElementById('editarTipoMovimiento').value,
                    ValorCCL: document.getElementById('editarValorCCL').value,
                    //MontoUsd: parseFloat(document.getElementById('editarMontoUsd').value)
                };

                fetch('/transacciones/editar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(async response => {
                    // if (!response.ok) throw new Error('Error en la respuesta');
                    
                    // const contentType = response.headers.get('content-type');
                    // if (contentType && contentType.includes('application/json')) {
                    //     return await response.json();
                    // }
                    // return null;
                    
                    const contentType = response.headers.get('content-type');
                    const isJson = contentType && contentType.includes('application/json');
                    
                    if (!response.ok) {
                        const errorData = isJson ? await response.json() : await response.text();
                    
                        let mensajeError = 'Error en la respuesta';
                        if (errorData && errorData.errors && Array.isArray(errorData.errors)) {
                            mensajeError = errorData.errors.join('\n');
                        } else if (typeof errorData === 'string') {
                            mensajeError = errorData;
                        }
                    
                        throw new Error(mensajeError);
                    }
                    
                    return isJson ? await response.json() : null;
                })               
                .then(result => {
                    // Recargar DataTable (si seguís usando jQuery solo para eso)
                    if (window.$ && $.fn.DataTable) {
                        $('#tablaTransacciones').DataTable().ajax.reload();
                    }

                    // Cerrar el modal de Bootstrap
                    const modalElement = document.getElementById('modalEditar');
                    const modalInstance = bootstrap.Modal.getInstance(modalElement);
                    modalInstance.hide();

                    mostrarToast('Cambios guardados correctamente', 'success');
                })
                .catch(error => {
                    console.error('Error al guardar:', error);
                    // alert('Error al guardar los cambios.');
                    //mostrarToast('Error al guardar', 'danger');
                    mostrarToast(error.message, 'danger');

                })
                .finally(() => {
                    btnGuardar.disabled = false;
                });
            });
        });

        



    </script>
}
