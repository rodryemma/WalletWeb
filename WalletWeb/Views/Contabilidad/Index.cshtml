@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-4 pb-2 fw-semibold text-secondary">Transacciones</h2>

<div class="d-flex gap-3 mb-4">

    <div class="p-3 bg-light border rounded shadow-sm flex-fill text-center">
        <div class="text-muted small">Total en USD</div>
        <div class="h5 fw-bold" id="totalMonto">0.00</div>
    </div>

    <div class="p-3 bg-light border rounded shadow-sm flex-fill text-center">
        <div class="text-muted small">Dólar CCL</div>
        <div class="h5 fw-bold" id="valorDolar">0.00</div>
    </div>

</div>

<div class="p-3 bg-white border rounded shadow-sm mb-4">
    <h5 class="mb-3 fw-semibold text-secondary">Filtrar</h5>

    <div class="row g-3">

        <div class="col-sm-6">
            <div class="p-3 bg-light border rounded shadow-sm h-100">
                <div class="text-muted small mb-2">Por movimiento</div>
                <div class="mt-auto">
                    <select id="tipoMovimientoSelect" class="form-select w-auto d-inline-block ms-2">
                        <option value="total">Total</option>
                        <option value="gastos">Gastos</option>
                        <option value="ingresos">Ingresos</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="p-3 bg-light border rounded shadow-sm h-100">
                <div class="text-muted small mb-2">Por fecha</div>
                <div class="mt-auto">
                    <label class="small fw-bold">Desde:</label>
                    <input type="date" id="fechaDesde">
                    <label class="small fw-bold">Hasta:</label>
                    <input type="date" id="fechaHasta">
                </div>
            </div>
        </div>

    </div>

</div>

<div class="d-flex justify-content-between align-items-center mb-3 mt-5">
    <h4 class="fw-semibold text-secondary">Lista de Transacciones</h4>
    <button class="btn-crear btn btn-sm btn-outline-primary" id="btn-crear">
        <i class="bi bi-plus"></i> Agregar
    </button>
</div>


<div>
    <table id="tablaTransacciones" class="table table-striped display">
        <thead>
            <tr>
                <th>Fecha</th>
                <th>Categoría</th>
                <th>Cuenta</th>
                <th>Monto Usd</th>
                <th>Comentario</th>
                <th>Tipo Movimiento</th>
                <th>Acción</th>
            </tr>
        </thead>
    </table>
</div>


<!-- Modal de Eliminación -->
<div class="modal fade" id="modalConfirmarEliminar" tabindex="-1" aria-labelledby="tituloModal" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-sm rounded-3">

            <div class="modal-header border-0 border-top border-3 border-danger">
                <h5 class="modal-title fw-semibold text-secondary" id="tituloModal">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body text-center py-4">
                <p class="mb-0 fs-6 text-muted">
                    ¿Estás seguro de que querés eliminar este registro?
                </p>
            </div>

            <div class="modal-footer border-0 d-flex justify-content-center gap-2">
                <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-outline-danger px-4" id="btnConfirmarEliminar">Eliminar</button>
            </div>

        </div>
    </div>
</div>

<!-- Modal de modificación -->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="tituloEditar" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-sm rounded-3">

            <div class="modal-header border-0 border-top border-3 border-primary">
                <h5 class="modal-title fw-semibold text-secondary" id="tituloEditar">
                    Editar transacción
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body p-4">
                <form id="formEditar">
                    <input type="hidden" id="editarId" />

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="editarFecha" class="form-label small text-muted">Fecha</label>
                            <input type="date" class="form-control" id="editarFecha" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarCategoria" class="form-label small text-muted">Categoría</label>
                            <input type="text" class="form-control" id="editarCategoria" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarCuenta" class="form-label small text-muted">Cuenta</label>
                            <input type="text" class="form-control" id="editarCuenta" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarCantidadDivisa" class="form-label small text-muted">Cantidad Divisa</label>
                            <input type="number" step="any" class="form-control" id="editarCantidadDivisa" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarDivisa" class="form-label small text-muted">Divisa</label>
                            <input type="text" class="form-control" id="editarDivisa" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarComentario" class="form-label small text-muted">Comentario</label>
                            <input type="text" class="form-control" id="editarComentario" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarValorCCL" class="form-label small text-muted">Valor CCL</label>
                            <input type="number" step="any" class="form-control" id="editarValorCCL" required />
                        </div>

                        <div class="col-md-6">
                            <label for="editarTipoMovimiento" class="form-label small text-muted">Tipo Movimiento</label>
                            <select class="form-control" id="editarTipoMovimiento">
                                <option value="ingresos">Ingresos</option>
                                <option value="gastos">Gastos</option>
                            </select>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer border-0 d-flex justify-content-center gap-2">
                <button class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-outline-primary px-4" id="btnGuardarCambios">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de creación -->
<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="tituloCrear" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-sm rounded-3">

            <div class="modal-header border-0 border-top border-3 border-primary">
                <h5 class="modal-title fw-semibold text-secondary" id="tituloCrear">
                    Crear transacción
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body p-4">
                <form id="formCrear">

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="crearFecha" class="form-label small text-muted">Fecha</label>
                            <input type="date" class="form-control" id="crearFecha" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearCategoria" class="form-label small text-muted">Categoría</label>
                            <input type="text" class="form-control" id="crearCategoria" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearCuenta" class="form-label small text-muted">Cuenta</label>
                            <input type="text" class="form-control" id="crearCuenta" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearCantidadDivisa" class="form-label small text-muted">Cantidad Divisa</label>
                            <input type="number" step="any" class="form-control" id="crearCantidadDivisa" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearDivisa" class="form-label small text-muted">Divisa</label>
                            <input type="text" class="form-control" id="crearDivisa" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearComentario" class="form-label small text-muted">Comentario</label>
                            <input type="text" class="form-control" id="crearComentario" required />
                        </div>

                        <div class="col-md-6">
                            <label for="crearValorCCL" class="form-label small text-muted">
                                Valor CCL
                            </label>

                            <div class="input-group">
                                <input type="number" step="any" class="form-control" id="crearValorCCL" required />
                                <span class="input-group-text" id="buton-ccl" style="cursor: pointer;">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"></path>
                                        <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"></path>
                                    </svg>
                                </span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <label for="crearTipoMovimiento" class="form-label small text-muted">
                                Tipo Movimiento
                            </label>
                            <select class="form-control" id="crearTipoMovimiento">
                                <option value="ingresos">Ingresos</option>
                                <option value="gastos">Gastos</option>
                            </select>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer border-0 d-flex justify-content-center gap-2">
                <button class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancelar</button>
                <button type="submit" class="btn btn-outline-primary px-4" id="btnGuardarNuevo">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.min.css">
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.min.js"></script>

    <script>

        document.addEventListener("DOMContentLoaded", async () => {
            cargarDateDesdeHasta();
            cargarModalEditar();
            cargarModalCrear();

            await cargarDolarCCL();
            await actualizarBotonCcl();
            await eliminarTransaccion();
            await editarTransaccion();
            await guardarTransaccion();
        });

        // Región: Cargar DolarCCL
        async function cargarDolarCCL() {
            try {
                const url = "/ccl/json";
                const data = await apiRequest(url);
                document.getElementById("valorDolar").textContent = data.ccl;
            } catch (error) {
                console.error(error);
                document.getElementById("valorDolar").textContent = "Error al cargar";
            }
        }

        // Región: Pedir DolarHistorico
        async function cargarDolarHistorico(fechaInicio, fechaFinal) {
            try {
                const url = `/cclhistorico/json?fechaInicio=${encodeURIComponent(fechaInicio)}&fechaFinal=${encodeURIComponent(fechaFinal)}`;
                return await apiRequest(url);

            } catch (error) {
                console.error(error);
                mostrarToast(error.message, 'danger');
            }
        }

        // Región: Cargar Date Desde y Hasta
        function cargarDateDesdeHasta(){
            const hoy = new Date();
            const fechaHasta = hoy.toISOString().split('T')[0];
            const unMesAntes = new Date(hoy);

            unMesAntes.setMonth(unMesAntes.getMonth() - 3);
            unMesAntes.setDate(1);

            const fechaDesde = unMesAntes.toISOString().split('T')[0];

            document.getElementById('fechaDesde').value = fechaDesde;
            document.getElementById('fechaHasta').value = fechaHasta;
        }

        // Región: Cargar DataTable
        $(document).ready(function () {
            $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            let fechaDesde = $('#fechaDesde').val();
            let fechaHasta = $('#fechaHasta').val();
            let fechaColumna = data[0];

            if (!fechaColumna) return false;

            // Convertir a formato compatible (si es necesario)
            let fecha = new Date(fechaColumna.split('/').reverse().join('-'));
            let desde = fechaDesde ? new Date(fechaDesde + 'T00:00:00') : null;
            let hasta = fechaHasta ? new Date(fechaHasta + 'T23:59:59') : null;

            return (!desde || fecha >= desde) && (!hasta || fecha <= hasta);
            });

            $('#fechaDesde, #fechaHasta').on('change', function () {
                $('#tablaTransacciones').DataTable().draw();
            });

            let tabla = $('#tablaTransacciones').DataTable({
                responsive: true,
                paging: true,
                destroy: true,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                },
                ajax: {
                    url: '/transacciones/json',
                    data: function (d) {
                         d.tipoMovimiento = $('#tipoMovimientoSelect').val(),
                         d.fecha = $('#fechaDesde').val();
                    }
                },
                order: [[0, 'desc']],//Fecha descendente
                columns: [
                    {
                        data: 'fecha',
                        title: 'Fecha',
                        render: function (data, type, row) {
                            if (type === 'display' || type === 'filter') {
                                const date = new Date(data);
                                return date.toLocaleDateString();
                            }
                            return data;
                        }
                    },
                    { data: 'categoria' },
                    { data: 'cuenta' },
                    {
                        data: 'montoUsd' ,
                        render: $.fn.dataTable.render.number(',', '.', 2, '$')
                    },
                    { data: 'comentario' },
                    { data: 'tipoMovimiento' },
                    {
                      data: null,
                      orderable: false,
                      searchable: false,
                      render: function (data, type, row) {
                          return `
                              <button class="btn-editar btn btn-sm btn-outline-primary" data-id="${row.id}">
                                       <i class="bi bi-pencil"></i>
                              </button>
                              <button class="btn-eliminar btn btn-sm btn-outline-danger" data-id="${row.id}">
                                      <i class="bi bi-trash"></i>
                              </button>
                          `;
                      }
                    }
                    ],
                    footerCallback: function (row, data, start, end, display) {
                        var api = this.api();
                        var total = api
                            .column(3, { filter: 'applied' })//Hacemos que se aplique el filtro en la celda 3 montoUsd
                            .data()
                            .reduce(function (a, b) {
                                var x = typeof a === 'string' ? parseFloat(a.replace(/[\$,]/g, '')) : a;
                                var y = typeof b === 'string' ? parseFloat(b.replace(/[\$,]/g, '')) : b;
                                return (x || 0) + (y || 0);
                            }, 0);

                     // Mostrar el total
                     $('#totalMonto').text(total.toFixed(2));
                    }
            });

            //Recargar table por tipomovimiento
            $('#tipoMovimientoSelect').change(function () {
            tabla.ajax.reload();
            });

            //Recargar table por fecha desde anterior
            let fechaInicial = new Date(document.getElementById('fechaDesde').value);

            document.getElementById('fechaDesde').addEventListener('change', function () {
                const nuevaFechaStr = this.value;
                if (!nuevaFechaStr) return;

                const nuevaFecha = new Date(nuevaFechaStr);

                if (nuevaFecha < fechaInicial) {
                    fechaInicial = nuevaFecha;
                    tabla.ajax.reload();
                }
            });
        });

        // Región: Botón Eliminar Abrir Modal
        let idAEliminar = null;
        document.querySelector('#tablaTransacciones').addEventListener('click', function (e) {
            const btnEliminar = e.target.closest('.btn-eliminar');
            if (btnEliminar) {

                idAEliminar = btnEliminar.dataset.id;
                document.getElementById('modalConfirmarEliminar').dataset.id = idAEliminar;

                const modal = new bootstrap.Modal(document.getElementById('modalConfirmarEliminar'));
                modal.show();
            }
        });

        // Región: Post Eliminar
        async function eliminarTransaccion(){
            const btnEliminar = document.getElementById('btnConfirmarEliminar');

            btnEliminar.addEventListener('click', async () => {
                if (typeof idAEliminar !== 'undefined' && idAEliminar !== null) {
                    btnEliminar.disabled = true;
                    const data = { id: idAEliminar };
                    try {
                        const url = "/transacciones/eliminar";
                        await apiRequest(url, "POST", data);
                        if (window.$ && $.fn.DataTable) {
                            $('#tablaTransacciones').DataTable().ajax.reload();
                        }
                        idAEliminar = null;

                        const modal = bootstrap.Modal.getInstance(document.getElementById('modalConfirmarEliminar'));
                        if (modal) modal.hide();

                        mostrarToast('Registro eliminado correctamente', 'success');
                    } catch(error) {
                        console.error('Error al guardar:', error);
                        mostrarToast(error.message, 'danger');
                    } finally {
                        btnEliminar.disabled = false;
                    }
                }
            });
        }

        // Región: Botón Editar Abrir Modal
        function cargarModalEditar(){
            const tabla = document.getElementById('tablaTransacciones');

            tabla.addEventListener('click', function (event) {
                //const target = event.target;
                const btnEditar = event.target.closest('.btn-editar');

                //if (target.classList.contains('btn-editar')) {
                if (btnEditar) {

                    const id = btnEditar.dataset.id;

                    // Encontramos la fila asociada
                    const tr = btnEditar.closest('tr');

                    // Usamos DataTables para obtener la data
                    const row = $('#tablaTransacciones').DataTable().row(tr).data();

                    if (!row) {
                        console.error('No se encontró la fila en DataTable');
                        return;
                    }

                    const fechaFormateada = row.fecha?.toString().split('T')[0];

                    // Llenar los campos del modal
                    document.getElementById('editarId').value = row.id;
                    document.getElementById('editarFecha').value = fechaFormateada;
                    document.getElementById('editarCategoria').value = row.categoria;
                    document.getElementById('editarCuenta').value = row.cuenta;
                    document.getElementById('editarCantidadDivisa').value = row.cantidadDivisa;
                    document.getElementById('editarDivisa').value = row.divisa;
                    document.getElementById('editarComentario').value = row.comentario;
                    document.getElementById('editarTipoMovimiento').value = row.tipoMovimiento;
                    document.getElementById('editarValorCCL').value = row.valorCCL;

                    // Mostrar el modal
                    const modalEditar = new bootstrap.Modal(document.getElementById('modalEditar'));
                    modalEditar.show();
                }
            });
        }

        // Región: Post Editar
        async function editarTransaccion(){
            const btnGuardar = document.getElementById('btnGuardarCambios');
            const form = document.getElementById("formEditar");

            //Validar formulario "formEditar"
            btnGuardar.addEventListener('click', async () => {

                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }

                // Desactivar el botón para evitar múltiples envíos
                btnGuardar.disabled = true;

                const data = {
                    Id: document.getElementById('editarId').value,
                    Fecha: document.getElementById('editarFecha').value,
                    Categoria: document.getElementById('editarCategoria').value,
                    Cuenta: document.getElementById('editarCuenta').value,
                    CantidadDivisa: document.getElementById('editarCantidadDivisa').value,
                    Divisa: document.getElementById('editarDivisa').value,
                    Comentario: document.getElementById('editarComentario').value,
                    TipoMovimiento: document.getElementById('editarTipoMovimiento').value,
                    ValorCCL: document.getElementById('editarValorCCL').value,
                };

                try  {
                    const url = "/transacciones/editar";
                    await apiRequest(url, "POST", data);
                    if (window.$ && $.fn.DataTable) {
                        $('#tablaTransacciones').DataTable().ajax.reload();
                    }
                    // Cerrar el modal de Bootstrap
                    const modalElement = document.getElementById('modalEditar');
                    const modalInstance = bootstrap.Modal.getInstance(modalElement);
                    modalInstance.hide();

                    mostrarToast('Cambios guardados correctamente', 'success');
                } catch(error) {
                    console.error('Error al guardar:', error);
                    mostrarToast(error.message, 'danger');
                } finally {
                    btnGuardar.disabled = false;
                }
            });
        }

        // Región: Botón Crear Abrir Modal
        function cargarModalCrear(){
            const btnCrear = document.getElementById('btn-crear');

            btnCrear.addEventListener('click', function () {
                const hoy = new Date();
                const fechaHoy = hoy.toISOString().split('T')[0];
                document.getElementById('crearFecha').value = fechaHoy;
                document.getElementById('crearCategoria').value = "";
                document.getElementById('crearCuenta').value = "";
                document.getElementById('crearCantidadDivisa').value = "";
                document.getElementById('crearDivisa').value = "";
                document.getElementById('crearComentario').value = "";
                document.getElementById('crearTipoMovimiento').value = "";
                document.getElementById('crearValorCCL').value = "";
                const modalCrear = new bootstrap.Modal(document.getElementById('modalCrear'));
                modalCrear.show();
            });
        }

        // Región: Post Crear
        async function guardarTransaccion(){
            const btnGuardar = document.getElementById('btnGuardarNuevo');
            const form = document.getElementById("formCrear");

            //Validar formulario "formCrear"
            btnGuardar.addEventListener('click', async () => {

                if (!form.checkValidity()) {
                    form.reportValidity();
                    return;
                }

                btnGuardar.disabled = true;

                const data = {
                    Fecha: document.getElementById('crearFecha').value,
                    Categoria: document.getElementById('crearCategoria').value,
                    Cuenta: document.getElementById('crearCuenta').value,
                    CantidadDivisa: document.getElementById('crearCantidadDivisa').value,
                    Divisa: document.getElementById('crearDivisa').value,
                    Comentario: document.getElementById('crearComentario').value,
                    TipoMovimiento: document.getElementById('crearTipoMovimiento').value,
                    ValorCCL: document.getElementById('crearValorCCL').value
                };

                try {
                    const url = "/transacciones/crear";
                    await apiRequest(url, "POST", data);
                    if (window.$ && $.fn.DataTable) {
                        $('#tablaTransacciones').DataTable().ajax.reload();
                    }
                    // Cerrar modal
                    const modalElement = document.getElementById('modalCrear');
                    const modalInstance = bootstrap.Modal.getInstance(modalElement);
                    modalInstance.hide();
                    mostrarToast('Cambios guardados correctamente', 'success');
                } catch (error) {
                    console.error('Error al guardar:', error);
                    mostrarToast(error.message, 'danger');
                } finally {
                    btnGuardar.disabled = false;
                }

            });
        }

        // Región: Evento Clic Actualizar CCL
        function actualizarBotonCcl(){
            const boton = document.getElementById('buton-ccl');
            boton.addEventListener('click', async () => {
                const fecha = document.getElementById('crearFecha').value;
                if (fecha) {
                    const fechaAnt = new Date(fecha);
                    fechaAnt.setDate(fechaAnt.getDate() - 7);
                    const fechaAux = fechaAnt.toISOString().split('T')[0]
                    const valorccl = await cargarDolarHistorico(fechaAux, fecha);
                    if(valorccl){
                        console.log("Valor recuperado: ", valorccl.cclhistorico);
                           if (!isNaN(valorccl.cclhistorico)) {
                               document.getElementById("crearValorCCL").value = valorccl.cclhistorico;
                           }
                    }
                }

            });
        }

    </script>
}
